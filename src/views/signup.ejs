<!DOCTYPE html>
<html>
    <head>
        <style>
            .container {
                padding: 25px;
            }

            input {
                width: 100%;
                padding: 12px;
                border: 1px solid #ccc;
                border-radius: 4px;
                box-sizing: border-box;
                margin-top: 6px;
                margin-bottom: 16px;
            }

            #message {
                display:none;
                background: #f1f1f1;
                color: #000;
                position: relative;
                padding: 20px;
                margin-top: 10px;
            }

            #message p {
                padding: 10px 35px;
                font-size: 18px;
            }

            /* Add a green text color and a checkmark when the requirements are right */
            .valid {
                color: green;
            }

            .valid:before {
                position: relative;
                left: -5px;
                content: "✔";
            }

            /* Add a red text color and an "x" when the requirements are wrong */
            .invalid {
                color: red;
            }

            .invalid:before {
                position: relative;
                left: -5px;
                content: "✖";
            }
        </style>
    </head>

    <body>
        <%- include('partials/header') -%>
        <div class="container">
            <h1 class="text-5xl font-bold mt-0 mb-6">Register</h1>
    
            <% if(typeof alert != 'undefined') { %>
                <% alert.forEach(function(error) { %>
                    <div class="alert alert-warning alert-dismissible fade show" role="alert">
                        <%= error.msg %>
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">x</span>
                        </button>
                    </div>
                <% }) %>
            <% } %>
    
            <form action="/api/signup/local" method="POST">
                <div class="form-group">
                    <label for="email" class="form-label">Email address</label>
                    <input type="email" class="form-control" name="email" id="email" required>
                </div>
                <div class="form-group">
                    <label for="password" class="form-label">Password</label>
                    <input 
                        type="password" 
                        class="form-control" 
                        name="password" 
                        id="password" 
                        pattern="(?=.*\d)(?=.*[a-z])(?=.*[$&+,:;=?@#|'<>.^*()%!-])(?=.*[A-Z]).{8,}" 
                        title="invalid password format"
                        required>
                </div>
                <div class="form-group">
                    <label for="confirm-password" class="form-label">Confirm Password</label>
                    <input 
                        type="password"
                        class="form-control"
                        name="confirm-password"
                        id="confirm-password"
                    >
                </div>
                <button 
                    type="submit"
                    class="inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out"
                    >Submit
                </button>
                <% if(locals.err_msg) { %>
                    <div class="font-medium leading-tight text-5xl mt-0 mb-2 text-red-600" role="alert"><%= err_msg %></div>
                <% } %>
            </form>
    
            <div class="password-criteria">
                <h3>Password must contain the following:</h3>
                <p id="password-criteria-letter" class="invalid">A <b>lowercase</b> letter</p>
                <p id="password-criteria-capital" class="invalid">A <b>capital (uppercase)</b> letter</p>
                <p id="password-criteria-number" class="invalid">A <b>number</b></p>
                <p id="password-criteria-length" class="invalid">Minimum <b>8 characters</b></p>
                <p id="password-criteria-special" class="invalid">A <b>special</b> character</p>
                <p id="password-criteria-match" class="invalid">Both password matches</p>
            </div>
    
            <p class="lead mt-4">Have An Account? <a class="text-purple-600 hover:text-purple-700 transition duration-300 ease-in-out mb-4" href="/signin">Login</a></p>

            <p><a href="/login/facebook" class="text-purple-600 hover:text-purple-700 transition duration-300 ease-in-out mb-4">Log In With Facebook</a></p>
            <p><a href="/login/google" class="text-purple-600 hover:text-purple-700 transition duration-300 ease-in-out mb-4">Log In With Google</a></p>
    
        </div>
    </body>

    <script>
        const passwordEl = document.getElementById("password");
        const confirmPasswordEl = document.getElementById("confirm-password");
        const letterEl = document.getElementById("password-criteria-letter");
        const capitalEl = document.getElementById("password-criteria-capital");
        const numberEl = document.getElementById("password-criteria-number");
        const lengthEl = document.getElementById("password-criteria-length");
        const specialEl = document.getElementById("password-criteria-special");
        const matchesEl = document.getElementById("password-criteria-match");
        // When the user starts to type something inside the password field
        passwordEl.onkeyup = function() {
            // Validate lowercase letters
            const lowerCaseLettersRegex = /[a-z]/g;
            if (passwordEl.value.match(lowerCaseLettersRegex)) {  
                letterEl.classList.remove("invalid");
                letterEl.classList.add("valid");
            } else {
                letterEl.classList.remove("valid");
                letterEl.classList.add("invalid");
            }
            
            // Validate capital letters
            const upperCaseLettersRegex = /[A-Z]/g;
            if (passwordEl.value.match(upperCaseLettersRegex)) {  
                capitalEl.classList.remove("invalid");
                capitalEl.classList.add("valid");
            } else {
                capitalEl.classList.remove("valid");
                capitalEl.classList.add("invalid");
            }

            // Validate numbers
            const numbersRegex = /[0-9]/g;
            if (passwordEl.value.match(numbersRegex)) {  
                numberEl.classList.remove("invalid");
                numberEl.classList.add("valid");
            } else {
                numberEl.classList.remove("valid");
                numberEl.classList.add("invalid");
            }
            
            // Validate length
            if (passwordEl.value.length >= 8) {
                lengthEl.classList.remove("invalid");
                lengthEl.classList.add("valid");
            } else {
                lengthEl.classList.remove("valid");
                lengthEl.classList.add("invalid");
            }

            // Validate special characters
            const specialCharRegex = /[$&+,:;=?@#|'<>.^*()%!-]/g
            if (passwordEl.value.match(specialCharRegex)) {
                specialEl.classList.remove("invalid");
                specialEl.classList.add("valid");
            } else {
                specialEl.classList.remove("valid");
                specialEl.classList.add("invalid");
            }

            // Validate password and confirm password matches
            if (passwordEl.value && confirmPasswordEl.value && confirmPasswordEl.value) {
                matchesEl.classList.remove("invalid");
                matchesEl.classList.add("valid");
                confirmPasswordEl.setCustomValidity("");
            } else {
                matchesEl.classList.remove("valid");
                matchesEl.classList.add("invalid");
                confirmPasswordEl.setCustomValidity("Passwords Don't Match");
            }
        }

        confirmPasswordEl.onkeyup = function() {
            // Validate password and confirm password matches
            if (passwordEl.value && confirmPasswordEl.value && passwordEl.value === confirmPasswordEl.value) {
                matchesEl.classList.remove("invalid");
                matchesEl.classList.add("valid");
                confirmPasswordEl.setCustomValidity("");
            } else {
                matchesEl.classList.remove("valid");
                matchesEl.classList.add("invalid");
                confirmPasswordEl.setCustomValidity("Passwords Don't Match");
            }
        }
    </script>
</html>
