{
  "openapi": "3.0.3",
    "info": {
      "version": "1.0.11",
      "title": "Aha Coding Test - API Docs",
      "description": "Please dont find any bugs!",
      "contact": {
        "name": "Swagger API Team"
      },
      "license": {
        "name": "MIT"
      }
    },
    "paths": {
        "/api/health": {
            "get": {
              "description": "Pings the server",
              "produces": [
                "application/json"
              ],
              "responses": {
                "200": {
                  "description": "OK"
                },
                "default": {
                  "description": "unexpected error",
                  "schema": {
                    "$ref": "#/definitions/ErrorModel"
                  }
                }
              }
            }
        },
        "/api/signup/local": {
            "post": {
                "description": "Creates a new user. Duplicates are not allowed.",
                "requestBody": {
                  "description": "Creates a new user. Duplicates are not allowed.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/definitions/NewUser"
                      }
                    },
                    "application/x-www-form-urlencoded": {
                      "schema": {
                        "$ref": "#/definitions/NewUser"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "Signed up successfully"
                  },
                  "default": {
                    "description": "Unexpected error"
                  }
                }
            }
        },
        "/api/login/local": {
          "post": {
            "description": "Login by email and password.",
            "tags": ["user"],
            "produces": [
              "application/json"
            ],
            "parameters": [
              {
                "name": "user",
                "in": "body",
                "description": "User to add.",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/LogInData"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Logged in successfully."
              },
              "400": {
                "description": "Log in failed. Potentially because of invalid credentials."
              },
              "default": {
                "description": "unexpected error."
              }
            }
          }
        },
        "/api/logout": {
          "get": {
            "description": "Log Out",
            "tags": ["user"],
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                "description": "logged out successfully"
              },
              "default": {
                "description": "unexpected error"
              }
            }
          }
        },
        "/api/email/verify": {
          "post": {
            "description": "(Re)send verification email to user.",
            "requestBody": {
              "required": true,
              "description": "Creates a new user. Duplicates are not allowed.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/definitions/EmailVerifyData"
                  }
                },
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "$ref": "#/definitions/EmailVerifyData"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "success."
              },
              "default": {
                "description": "unexpected error"
              }
            }
          }
        },
        "/user/profile": {
          "get": {
            "description": "Gets user profile. You must log in to access this api.",
            "tags": ["user"],
            "responses": {
              "200": {
                "description": "Success."
              },
              "403": {
                "description": "Forbidden. You must log in to call this API."
              },
              "default": {
                "description": "Unexpected error"
              }
            }
          }
        },
        "/user/dashboard": {
          "get": {
            "description": "Gets the dashbord. You must log in to access this api.",
            "tags": ["user"],
            "responses": {
              "200": {
                "description": "success."
              },
              "403": {
                "description": "Forbidden. You must log in to call this API."
              },
              "default": {
                "description": "Unexpected error"
              }
            }
          }
        },
        "/api/user/profile": {
          "post": {
            "description": "Updates user profile. You must log in to access this api.",
            "tags": ["user"],
            "requestBody": {
              "required": true,
              "description": "Creates a new user. Duplicates are not allowed.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/definitions/UpdateProfileData"
                  }
                },
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "$ref": "#/definitions/UpdateProfileData"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "success."
              },
              "403": {
                "description": "Forbidden. You must log in to call this API."
              },
              "default": {
                "description": "unexpected error"
              }
            }
          }
        }
    },
    "definitions": {
        "NewUser": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/NewUser"
            },
            {
              "required": [
                "email",
                "password",
                "password1"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password1": {
                    "type": "string"
                }
              }
            }
          ]
        },
        "LogInData": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/LogInData"
            },
            {
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                    "type": "string"
                }
              }
            }
          ]
        },
        "EmailVerifyData": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/EmailVerifyData"
            },
            {
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "UpdateProfileData": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/UpdateProfileData"
            },
            {
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "ErrorModel": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "integer",
                "format": "int32"
              },
              "message": {
                "type": "string"
              }
            }
        }
    }
}